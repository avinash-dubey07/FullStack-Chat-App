{"id":-1,"name":"Onboarding diagram","userId":-1,"createdAt":"","updatedAt":"","content":{"items":[{"uid":"hyyRZE3E8u","position":{"x":-360,"y":670},"sizes":{"width":380,"height":300},"autoheight":false,"blockContent":{"type":"doc","content":[{"type":"filePathNode","attrs":{"pathToFile":"src/","version":1},"content":[{"type":"text","marks":[{"type":"bold"}],"text":"PushNotificationDialog.js"}]},{"type":"codeBlock","attrs":{"language":"javascript","wrapCode":false},"content":[{"type":"text","text":"function EnablePushNotifications() {\n // If allowed by the user\n getFcmToken();\n saveFcmTokenInDB(userId, fcmToken);\n}"}]},{"type":"paragraph","content":[{"type":"hardBreak"},{"type":"text","text":"Alert user to enable push notifications"}]},{"type":"paragraph"}]},"nodeType":"block"},{"uid":"p3Aq7QSyNf","position":{"x":140,"y":560},"sizes":{"width":400,"height":732},"autoheight":true,"blockContent":{"type":"doc","content":[{"type":"filePathNode","attrs":{"pathToFile":"backend/src/controllers/","version":1},"content":[{"type":"text","marks":[{"type":"bold"}],"text":"auth.controller.js"}]},{"type":"codeBlock","attrs":{"language":"javascript","wrapCode":true},"content":[{"type":"text","text":"export const saveFcmTokenInDB = async (req, res) => {\n  try {\n    const { userId, token } = req.body;\n\n    if (!userId || !token) {\n      return res.status(400).json({ message: \"User ID and token are required.\" });\n    }\n\n    // Find user and update their FCM tokens array\n    const user = await User.findById(userId);\n\n    if (!user) {\n      return res.status(404).json({ message: \"User not found.\" });\n    }\n\n    // Prevent duplicate FCM tokens\n    if (!user.fcmTokens.includes(token)) {\n      user.fcmTokens.push(token);\n      await user.save();\n    }\n\n    res.status(200).json({ message: \"FCM token updated successfully!\" });\n  } catch (error) {\n    console.error(\"Error updating FCM token:\", error);\n    res.status(500).json({ message: \"Internal server error.\" });\n  }\n};"}]}]},"nodeType":"block"},{"uid":"ATI0TuuykG","position":{"x":-170,"y":430},"sizes":{"width":400,"height":100},"autoheight":false,"blockContent":{"type":"doc","content":[{"type":"heading","attrs":{"level":1},"content":[{"type":"text","text":"FCM TOKEN SETUP FLOW"}]}]},"color":{"bgColor":"#ffffff","bgName":"white"},"nodeType":"block"},{"uid":"xNJA4ENVdz","position":{"x":-690,"y":1540},"sizes":{"width":400,"height":1026},"autoheight":true,"blockContent":{"type":"doc","content":[{"type":"filePathNode","attrs":{"pathToFile":"backend/src/controllers/","version":1},"content":[{"type":"text","marks":[{"type":"bold"}],"text":"message.controller.js"}]},{"type":"codeBlock","attrs":{"language":"javascript","wrapCode":true},"content":[{"type":"text","text":"export const sendMessage = async (req, res) => {\n  try {\n    const {text, image} = req.body;\n    const { id: receiverId} = req.params;\n    const senderId = req.user._id;\n   \n    let imageUrl;\n    if(image) {\n      // upload base64 image to cloudinary\n      const uploadResponse = await cloudinary.uploader.upload(image);\n      imageUrl = uploadResponse.secure_url;\n    }\n\n    const newMessage = new Message({\n      senderId,\n      receiverId,\n      text,\n      image: imageUrl,\n    });\n\n    await newMessage.save();\n\n// get recipients FCM token\nconst reciever = await User.find(receiverId);\nawait sendFcmNotification(reciever.token)\n\n    // RealTime functionality goes here => socket.io \n    const receiverSocketId = getReceiverSocketId(receiverId);\n    if (receiverSocketId) {\n      io.to(receiverSocketId).emit(\"newMessage\", newMessage);\n    }\n   \n    res.status(201).json(newMessage);\n  } catch (error) {\n    console.log(\"Error in senMessage controller\", error.message);\n    res.status(500).json({ message: \"Interenal Server Error\" });\n  }\n};"}]},{"type":"paragraph"},{"type":"paragraph"},{"type":"paragraph"}]},"nodeType":"block"},{"uid":"r-fbmwT66Y","position":{"x":350,"y":1710},"sizes":{"width":400,"height":242},"autoheight":true,"blockContent":{"type":"doc","content":[{"type":"filePathNode","attrs":{"pathToFile":"backend/src/services/","version":1},"content":[{"type":"text","marks":[{"type":"bold"}],"text":"notification.service.js"}]},{"type":"codeBlock","attrs":{"language":"javascript","wrapCode":true},"content":[{"type":"text","text":"export const sendFcmNotification = async (token) => {\n  const firebase = admin.initializeApp();\n  await firebase.sendNotification(token);\n};\n"}]}]},"nodeType":"block"},{"uid":"J3DJZJRLeD","position":{"x":1550,"y":1890},"sizes":{"width":400,"height":294.5},"autoheight":true,"blockContent":{"type":"doc","content":[{"type":"filePathNode","attrs":{"pathToFile":"frontend/src/","version":1},"content":[{"type":"text","marks":[{"type":"bold"}],"text":"firebase.config.js"}]},{"type":"codeBlock","attrs":{"language":"javascript","wrapCode":true},"content":[{"type":"text","text":"// Listen for Incoming Messages\nconst onMessageListener = () =>\n  new Promise((resolve) => {\n    onMessage(messaging, (payload) => {\n      console.log(\"Message received:\", payload);\n      resolve(payload);\n    });\n  });"}]}]},"nodeType":"block"},{"uid":"KUdnIFZODy","position":{"x":-720,"y":1360},"sizes":{"width":560,"height":95},"autoheight":true,"blockContent":{"type":"doc","content":[{"type":"heading","attrs":{"level":1},"content":[{"type":"text","text":"NOTIFICATION SEND & RECIEVE FLOW"}]}]},"color":{"bgColor":"hsla(0, 0%, 90%, 1)","bgName":"gray-l"},"nodeType":"block"}],"configs":{"centerX":384.89027484206076,"centerY":-577.4160281124937,"zoomLevel":0.7932359249393139},"arrowData":{"arrowsMap":{"arrow-point-bI0wBh3Ufk-bottom-point-PSPLIYKa9J-top":{"to":"point-PSPLIYKa9J-top","from":"point-bI0wBh3Ufk-bottom","label":"Normal Box","direction":"ft","selectable":true},"arrow-point-bI0wBh3Ufk-bottom-point-ytXK_ayIc1-top":{"to":"point-ytXK_ayIc1-top","from":"point-bI0wBh3Ufk-bottom","label":"Code Box","direction":"ft","selectable":true},"arrow-point-hyyRZE3E8u-right-point-6ZopTaEaDZ-left":{"to":"point-6ZopTaEaDZ-left","from":"point-hyyRZE3E8u-right","label":"call","direction":"ft","selectable":true}},"pointsMap":{"point-PSPLIYKa9J-top":{"x":805.9999797489683,"y":60,"id":"point-PSPLIYKa9J-top","direction":"top"},"point-ytXK_ayIc1-top":{"x":205.99999493724206,"y":60,"id":"point-ytXK_ayIc1-top","direction":"top"},"point-6ZopTaEaDZ-left":{"x":220,"y":605.9999898744841,"id":"point-6ZopTaEaDZ-left","direction":"left"},"point-hyyRZE3E8u-right":{"x":100,"y":606,"id":"point-hyyRZE3E8u-right","direction":"right"},"point-bI0wBh3Ufk-bottom":{"x":515.9999797489683,"y":-40,"id":"point-bI0wBh3Ufk-bottom","direction":"bottom"}},"edgesMap":{"edge-hyyRZE3E8u-hyyRZE3E8u-right-p3Aq7QSyNf-p3Aq7QSyNf-left":{"uid":"edge-hyyRZE3E8u-hyyRZE3E8u-right-p3Aq7QSyNf-p3Aq7QSyNf-left","fromNodeId":"hyyRZE3E8u","fromHandleId":"hyyRZE3E8u-right","toNodeId":"p3Aq7QSyNf","toHandleId":"p3Aq7QSyNf-left","direction":"ft","selectable":true,"type":"solid","content":{"label":""}},"edge-xNJA4ENVdz-xNJA4ENVdz-right-r-fbmwT66Y-r-fbmwT66Y-left":{"uid":"edge-xNJA4ENVdz-xNJA4ENVdz-right-r-fbmwT66Y-r-fbmwT66Y-left","fromNodeId":"xNJA4ENVdz","fromHandleId":"xNJA4ENVdz-right","toNodeId":"r-fbmwT66Y","toHandleId":"r-fbmwT66Y-left","direction":"ft","selectable":true,"type":"solid","content":{"label":"Use FCM Notification service to trigger notification from backend"}},"edge-r-fbmwT66Y-r-fbmwT66Y-right-J3DJZJRLeD-J3DJZJRLeD-left":{"uid":"edge-r-fbmwT66Y-r-fbmwT66Y-right-J3DJZJRLeD-J3DJZJRLeD-left","fromNodeId":"r-fbmwT66Y","fromHandleId":"r-fbmwT66Y-right","toNodeId":"J3DJZJRLeD","toHandleId":"J3DJZJRLeD-left","direction":"ft","selectable":true,"type":"solid","content":{"label":"Frontend recieves FCM Token, and handles it via onMessaeListner"}}}}}}